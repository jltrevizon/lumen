{
    "openapi": "3.0.0",
    "info": {
        "title": "API Focus",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        },
        {
            "url": "https://dev.api.focus.grupomobius.com"
        },
        {
            "url": "https://api.focus.grupomobius.com"
        }
    ],
    "paths": {
        "/api/accessories": {
            "get": {
                "tags": [
                    "accessories"
                ],
                "summary": "Get all accessories",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "vehicles",
                                "accessoryType"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Accessory"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accessories"
                ],
                "summary": "Create accessory",
                "operationId": "createAccessory",
                "requestBody": {
                    "description": "Create accessory object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Accessory"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accessories/{id}": {
            "get": {
                "tags": [
                    "accessories"
                ],
                "summary": "Get accessory by ID",
                "operationId": "6b550ae87a4b0aa5dfdc6cd234bf1404",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "accessories"
                ],
                "summary": "Updated accessory",
                "operationId": "updateAccessory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated accessory object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Accessory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "accessories"
                ],
                "summary": "Delete accessory",
                "operationId": "deleteAccessory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accessory-types": {
            "get": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Get all accessory types",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessoryType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Create accessory type",
                "operationId": "createAccessoryType",
                "requestBody": {
                    "description": "Create accessory type object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessoryType"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessoryType"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accessory-types/{id}": {
            "get": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Get accessory type by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessoryType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory type not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Updated accessory type",
                "operationId": "updateAccessoryType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated accessory type object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessoryType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessoryType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "accessory-types"
                ],
                "summary": "Delete accessory type",
                "operationId": "deleteAccesorType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Accessory type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accessory-vehicle": {
            "get": {
                "tags": [
                    "accessory-vehicles"
                ],
                "summary": "Get all accessory vehicles",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessoryVehicle"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "accessory-vehicle"
                ],
                "summary": "Create accessory vehicle",
                "operationId": "createAccessoryVehicle",
                "requestBody": {
                    "description": "Create accessory vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "accesories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessoryVehicle"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/accessory-vehicle/delete": {
            "post": {
                "tags": [
                    "accessory-vehicles"
                ],
                "summary": "Destroy accessory vehicle",
                "operationId": "destroyAccessoryVehicle",
                "requestBody": {
                    "description": "Destroy accessory vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "accesories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleWithAccessories"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/signin": {
            "post": {
                "tags": [
                    "auths"
                ],
                "summary": "Sign In",
                "operationId": "SignIn",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful sign in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserWithCampasAndRole"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/refresh": {
            "get": {
                "tags": [
                    "auths"
                ],
                "summary": "Get refresh token",
                "operationId": "86e894df0ccad042116bf937e5593629",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserWithCampasAndRole"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/brands": {
            "get": {
                "tags": [
                    "brands"
                ],
                "summary": "Get all brands",
                "operationId": "3c41aa2e65314941e37a634e810c5f73",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "brands": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "brands"
                ],
                "summary": "Create brands",
                "operationId": "createBrand",
                "requestBody": {
                    "description": "Create brand object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/brands/{id}": {
            "get": {
                "tags": [
                    "brands"
                ],
                "summary": "Get brand by ID",
                "operationId": "767f67c0955810b713c48d4100f02362",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "brand": {
                                            "$ref": "#/components/schemas/Brand"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "brands"
                ],
                "summary": "Updated brand",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated brand object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budgets": {
            "get": {
                "tags": [
                    "budgets"
                ],
                "summary": "Get all budgets",
                "operationId": "f617599901f7b4ceb6c47f30f60869e7",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budget-lines": {
            "get": {
                "tags": [
                    "budget-lines"
                ],
                "summary": "Get all budget lines",
                "operationId": "fae61acc2a92a5f0caac66c3b26f1057",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetLinePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budget-pending-task": {
            "get": {
                "tags": [
                    "budget-pending-tasks"
                ],
                "summary": "Get all budget pending tasks",
                "operationId": "360114b46da8b5628dfbb2d3ea335d78",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetPendingTaskPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "budget-pending-tasks"
                ],
                "summary": "Create budget pending task",
                "operationId": "createBudgetPendingTask",
                "requestBody": {
                    "description": "Create operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetPendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BudgetPendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/budget-pending-task/{id}": {
            "put": {
                "tags": [
                    "budget-pending-tasks"
                ],
                "summary": "Updated budget pending task",
                "operationId": "updateBudgetPendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated budget pending task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BudgetPendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "brands": {
                                            "$ref": "#/components/schemas/BudgetPendingTask"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/campas/getall": {
            "get": {
                "tags": [
                    "campas"
                ],
                "summary": "Get all campas",
                "operationId": "7091b3e6883845bdc7cb413d1498c670",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "ids[]",
                        "in": "query",
                        "description": "A list of ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Campa"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/campas/{id}": {
            "get": {
                "tags": [
                    "campas"
                ],
                "summary": "Get campa by ID",
                "operationId": "b355ff6667d9babb23f12c41e4268a75",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "campa": {
                                            "$ref": "#/components/schemas/Campa"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campa not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/campas": {
            "post": {
                "tags": [
                    "campas"
                ],
                "summary": "Create campa",
                "operationId": "createCampa",
                "requestBody": {
                    "description": "Create campa object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/campas/update/{id}": {
            "put": {
                "tags": [
                    "campas"
                ],
                "summary": "Updated campa",
                "operationId": "updateCampa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated campa object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "campa": {
                                            "$ref": "#/components/schemas/Campa"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campa not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/campas/delete/{id}": {
            "delete": {
                "tags": [
                    "campas"
                ],
                "summary": "Delete campa",
                "operationId": "deleteCampa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Campa not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/assign-campa": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create campa user",
                "operationId": "createCampaUser",
                "requestBody": {
                    "description": "Return user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "campas": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CampaUser"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/delete-campa": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "delete campa",
                "operationId": "deleteCampaUser",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "campas": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/CampaUser"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "campa deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/getall": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "Get all categories",
                "operationId": "e86f3ceff0150e9abb80f1b9a9269d5f",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "categories"
                ],
                "summary": "Get category by ID",
                "operationId": "c68e76d323c008827a9e47398b1583de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "post": {
                "tags": [
                    "categories"
                ],
                "summary": "Create category",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "Create category object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/update/{id}": {
            "put": {
                "tags": [
                    "categories"
                ],
                "summary": "Updated category",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated category object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/delete/{id}": {
            "delete": {
                "tags": [
                    "categories"
                ],
                "summary": "Delete category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chat": {
            "post": {
                "tags": [
                    "chats"
                ],
                "summary": "Create message",
                "operationId": "createMessage",
                "requestBody": {
                    "description": "Create message",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "campa_id": {
                                        "type": "integer"
                                    },
                                    "message": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chat"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chat-app": {
            "post": {
                "tags": [
                    "chats"
                ],
                "summary": "Create message app",
                "operationId": "createMessageApp",
                "requestBody": {
                    "description": "Create message app",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    },
                                    "campa_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chat"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-message": {
            "post": {
                "tags": [
                    "chats"
                ],
                "summary": "Get message",
                "operationId": "getMessage",
                "requestBody": {
                    "description": "Create message app",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "campa_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chat"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-message-app": {
            "get": {
                "tags": [
                    "chats"
                ],
                "summary": "Get message app",
                "operationId": "e0b73d49a8fbada116cb3e298f9cbcc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chat"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/read-messages": {
            "post": {
                "tags": [
                    "chats"
                ],
                "summary": "Read messages",
                "operationId": "readMessages",
                "requestBody": {
                    "description": "Create message app",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "messages": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Message"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/colors": {
            "get": {
                "tags": [
                    "colors"
                ],
                "summary": "Get all colors",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "nameNull",
                        "in": "query",
                        "description": "Name null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Color"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "colors"
                ],
                "summary": "Create color",
                "operationId": "createColor",
                "requestBody": {
                    "description": "Create color object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Color"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/colors/{id}": {
            "put": {
                "tags": [
                    "colors"
                ],
                "summary": "Updated color",
                "operationId": "updateColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated color object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Color"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments": {
            "get": {
                "tags": [
                    "comments"
                ],
                "summary": "Get all comments",
                "operationId": "0406f270b674fae17bf23b4206a3004f",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentPaginate"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "Create comment",
                "operationId": "createComment",
                "requestBody": {
                    "description": "Create comment object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies/getall": {
            "get": {
                "tags": [
                    "companies"
                ],
                "summary": "Get all companies",
                "operationId": "5d736021be1e9e4c1cf74512f6b26ef2",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "companies[]",
                        "in": "query",
                        "description": "A list of companies",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1
                            ]
                        }
                    },
                    {
                        "name": "noIds[]",
                        "in": "query",
                        "description": "A list of no ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                36,
                                38,
                                39
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies/{id}": {
            "get": {
                "tags": [
                    "companies"
                ],
                "summary": "Get company by ID",
                "operationId": "01c261c039e4b27beeb888ef46bd86db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies": {
            "post": {
                "tags": [
                    "companies"
                ],
                "summary": "Create company",
                "operationId": "createCompany",
                "requestBody": {
                    "description": "Create company object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies/update/{id}": {
            "put": {
                "tags": [
                    "companies"
                ],
                "summary": "Updated company",
                "operationId": "updateCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated company object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Company"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Company"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/companies/delete/{id}": {
            "delete": {
                "tags": [
                    "companies"
                ],
                "summary": "Delete company",
                "operationId": "deleteCompany",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/getall": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "operationId": "fd67d498ed291052603ddd8f042458e3",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CustomerPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/{id}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get customer by ID",
                "operationId": "9dbdb0ec3a90ff608165986f2cf42fac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Create customer",
                "operationId": "createCustomer",
                "requestBody": {
                    "description": "Create customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/update/{id}": {
            "put": {
                "tags": [
                    "customers"
                ],
                "summary": "Updated customer",
                "operationId": "updateCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated customer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/customers/delete/{id}": {
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "Delete customer",
                "operationId": "deleteCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/damages": {
            "get": {
                "tags": [
                    "damages"
                ],
                "summary": "Get all damages",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "notNullDamageTypeId",
                        "in": "query",
                        "description": "not null damage type id",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "vehicleCampaIds[]",
                        "in": "query",
                        "description": "A list of vehicle campa IDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DamagePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "damages"
                ],
                "summary": "Create damage",
                "operationId": "createDamage",
                "requestBody": {
                    "description": "Create damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Damage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Damage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/damages/{id}": {
            "put": {
                "tags": [
                    "damages"
                ],
                "summary": "Updated damage",
                "operationId": "updateDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Damage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Damage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Damage not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/damage-images": {
            "get": {
                "tags": [
                    "damage-images"
                ],
                "summary": "Get all damage image",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "damage-images"
                ],
                "summary": "Create damage image",
                "operationId": "createDamageImage",
                "requestBody": {
                    "description": "Create damage image object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DamageImage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DamageImage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/damage-images/{id}": {
            "put": {
                "tags": [
                    "damage-images"
                ],
                "summary": "Updated damage image",
                "operationId": "updateDamageImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated damage image object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DamageImage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DamageImage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Damage image not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/damage-type": {
            "get": {
                "tags": [
                    "damage-types"
                ],
                "summary": "Get all damage types",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DamageType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/defleet-variables/getall": {
            "get": {
                "tags": [
                    "defleet-variables"
                ],
                "summary": "Get all defleet vairables",
                "operationId": "dde4121a85d0e67a150192fcb218d4b9",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefleetVariablePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/defleet-variables": {
            "get": {
                "tags": [
                    "defleet-variables"
                ],
                "summary": "Get defleet vairables",
                "operationId": "8e98c248b4b954626d1eb4d97c7adb00",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefleetVariable"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "defleet-variables"
                ],
                "summary": "Updated variable",
                "operationId": "updateDefleetVariable",
                "requestBody": {
                    "description": "Updated defleet variable object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefleetVariable"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefleetVariable"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "defleet-variables"
                ],
                "summary": "Create defleet variable",
                "operationId": "createDefleetVariable",
                "requestBody": {
                    "description": "Create defleet variable object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefleetVariable"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefleetVariable"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delivery-vehicles": {
            "get": {
                "tags": [
                    "delivery-vehicles"
                ],
                "summary": "Get all delivery vehicles",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "pendindTaskNull",
                        "in": "query",
                        "description": "Pending task null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "vehicleDeleted",
                        "in": "query",
                        "description": "Vehicle deleted",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delivery-vehicles/{id}": {
            "delete": {
                "tags": [
                    "delivery-vehicles"
                ],
                "summary": "Delete delivery vehicle",
                "operationId": "deleteDeliveryVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Delivery vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/delivery-note-ald": {
            "get": {
                "tags": [
                    "downloads"
                ],
                "summary": "get delivery note ald",
                "operationId": "39402ef41c423ef564bdf2087ce99967",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "query",
                        "description": "String",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "check",
                        "in": "query",
                        "description": "Boolean",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "delivery_no",
                        "in": "query",
                        "description": "delivery no alb-",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "description": "String",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_exit",
                        "in": "query",
                        "description": "date-time",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": "date-time",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reference",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "truck",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trailer",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "driver",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dni",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "vehicles",
                        "in": "query",
                        "description": "string",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1,2,3"
                    },
                    {
                        "name": "total",
                        "in": "query",
                        "description": "integer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/pdf": {}
                        }
                    }
                }
            }
        },
        "/api/estimated-dates": {
            "post": {
                "tags": [
                    "estimated-dates"
                ],
                "summary": "Create estimated date",
                "operationId": "createEstimatedDate",
                "requestBody": {
                    "description": "Create estimated date object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EstimatedDate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedDate"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/estimated-dates/{id}": {
            "put": {
                "tags": [
                    "estimated-dates"
                ],
                "summary": "Updated estimated date",
                "operationId": "updateEstimatedDate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated estimated date object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EstimatedDate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EstimatedDate"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Estimated date not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/getall": {
            "get": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Get all group tasks",
                "operationId": "b124ffe066473a7acd2c3b8283a964e2",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTaskPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/{id}": {
            "get": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Get group task by ID",
                "operationId": "66ee6747b6d98260464f1973e05beb5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Task not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks": {
            "post": {
                "tags": [
                    "grouptasks"
                ],
                "summary": "Create group task",
                "operationId": "createGroupTask",
                "requestBody": {
                    "description": "Create group task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/update/{id}": {
            "put": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Updated group task",
                "operationId": "updateGroupTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated group task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/delete/{id}": {
            "delete": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Delete group task",
                "operationId": "deleteGroupTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/approved-available": {
            "post": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Approved available",
                "operationId": "ApprovedAvailable",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_id",
                                    "questionnaire_id"
                                ],
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "questionnaire_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solicitud aprobada"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/grouptasks/decline": {
            "post": {
                "tags": [
                    "group-tasks"
                ],
                "summary": "Decline group task",
                "operationId": "DeclineGroupTask",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_id",
                                    "group_task_id"
                                ],
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "group_task_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solicitud declinada!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/history-locations": {
            "get": {
                "tags": [
                    "history-locations"
                ],
                "summary": "Get all history-locations",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "vehicleCampaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "vehiclePlate",
                        "in": "query",
                        "description": "Plate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "states[]",
                        "in": "query",
                        "description": "A list of states",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "whereHasVehicle",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HistoryLocationPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidences/getall": {
            "get": {
                "tags": [
                    "incidences"
                ],
                "summary": "Get all incidences",
                "operationId": "4a3348e70398e69fbb9ee3a2f9fa9873",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidencePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidence-types/getall": {
            "get": {
                "tags": [
                    "incidence-types"
                ],
                "summary": "Get all incidence types",
                "operationId": "2d0a66f0fa922cf1fa3b524abb7cfb8a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IncidenceType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidences/{id}": {
            "get": {
                "tags": [
                    "incidences"
                ],
                "summary": "Get incidence by ID",
                "operationId": "edf9040b9193e250f151b52d2a335a5b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidences": {
            "post": {
                "tags": [
                    "incidences"
                ],
                "summary": "Create incidence",
                "operationId": "createIncidence",
                "requestBody": {
                    "description": "Create group task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incidence"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidences/update/{id}": {
            "put": {
                "tags": [
                    "incidences"
                ],
                "summary": "Updated incidence",
                "operationId": "updateIncidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated incidence object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Incidence"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidences/delete/{id}": {
            "delete": {
                "tags": [
                    "incidences"
                ],
                "summary": "Delete incidence",
                "operationId": "deleteIncidence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidence-images": {
            "get": {
                "tags": [
                    "incidence-images"
                ],
                "summary": "Get all incidence images",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidenceImagePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "Create incidence image",
                "operationId": "createIncidenceImage",
                "requestBody": {
                    "description": "Create incidence image object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncidenceImage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidenceImage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/incidence-images/{id}": {
            "put": {
                "tags": [
                    "incidence-images"
                ],
                "summary": "Updated incidence images",
                "operationId": "updateIncidenceImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated incidence images object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IncidenceImage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IncidenceImage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Incidence image not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/kpis/inpu": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "Get inpu",
                "operationId": "527594737efd02629c43a0899047d974",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/kpis/out": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "Get out",
                "operationId": "bb4a3942ef6ad63ac3fb614865bd28e1",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/kpi-sub-states": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi sub states",
                "operationId": "2041976592a51fd388350b28b1d6f337",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-sub-states-month": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi sub states month",
                "operationId": "a9107b15aa73ef2dd46cb800749f991e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-diff-reception": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi diff reception",
                "operationId": "c2292b4df20fc28fafa58ad63f39c01c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-check-list": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi checklist",
                "operationId": "2242d6d09158cb903d025b0f145be8b4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-inpu-out-stock": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi inpu out stock",
                "operationId": "11c889ffd1867da13f79fc6e9bf626a5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-all": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi all",
                "operationId": "7de2b02a27d7e489cdda36329a78abd5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/kpi-pending-tasks": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get kpi pending tasks",
                "operationId": "bdc043281c327fd2c082052bd222e7ae",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/stock-pending-tasks": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get stock pending tasks",
                "operationId": "8ea1cd5f6c1bc86ea938fdd668202bfd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/stock-vehicles": {
            "get": {
                "tags": [
                    "kpis"
                ],
                "summary": "get stock vehicles",
                "operationId": "91607f8e071b83abe6e65b4adfa40cad",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
                        }
                    }
                }
            }
        },
        "/api/login-logs/getall": {
            "get": {
                "tags": [
                    "login-logs"
                ],
                "summary": "Get all login logs",
                "operationId": "0dc95f4895f22c413d3210c003c1fecc",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginLogPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login-logs": {
            "post": {
                "tags": [
                    "login-logs"
                ],
                "summary": "Create login log",
                "operationId": "createLoginLog",
                "requestBody": {
                    "description": "Create login log object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginLog"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginLog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/login-logs/by-user": {
            "post": {
                "tags": [
                    "login-logs"
                ],
                "summary": "Get User",
                "operationId": "getUser",
                "requestBody": {
                    "description": "Get login log",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginLog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/send-code": {
            "post": {
                "tags": [
                    "passwords"
                ],
                "summary": "Send Code",
                "operationId": "SendCode",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful send code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email enviado or El usuario no existe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": ""
                    }
                }
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "passwords"
                ],
                "summary": "Reset password",
                "operationId": "ResetPassword",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "code": {
                                        "type": "integer"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful reset password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code not available"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manual-questionnaire": {
            "post": {
                "tags": [
                    "manual-questionnaire"
                ],
                "summary": "Create manual questionnaire",
                "operationId": "createManualQuestionnaire",
                "requestBody": {
                    "description": "Create manual questionnaire object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManualQuestionnaire"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ManualQuestionnaire"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/http-requests": {
            "get": {
                "tags": [
                    "http-requests"
                ],
                "summary": "Get all http requests",
                "operationId": "30474c43f6ccf03da6e88b7587b05cc1",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MonitorPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/operations/getall": {
            "get": {
                "tags": [
                    "operations"
                ],
                "summary": "Get all type operations",
                "operationId": "cd4dc946bd1a5462060d0a224f6a4358",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Operation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/operations/{id}": {
            "get": {
                "tags": [
                    "operations"
                ],
                "summary": "Get operation by ID",
                "operationId": "b60abfb38a7eb5eca627f624ca13d8df",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "operations"
                ],
                "summary": "Updated operation model",
                "operationId": "updateOperation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Operation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/operations": {
            "post": {
                "tags": [
                    "operations"
                ],
                "summary": "Create operation",
                "operationId": "createOperation",
                "requestBody": {
                    "description": "Create operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Operation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password-reset-codes/getall": {
            "get": {
                "tags": [
                    "password-reset-codes"
                ],
                "summary": "Get all password reset codes",
                "operationId": "ec93216ddd0312fd3b5481d75aadbbfd",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PasswordResetCodePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-authorization": {
            "get": {
                "tags": [
                    "pending-authorizations"
                ],
                "summary": "Get all pending authorizations",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingAuthorization"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/getall": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get all pending tasks",
                "operationId": "38b62cbf649ce5953c629705934fac5d",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/{id}": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get pending task by ID",
                "operationId": "2dfb4967add2b76f56e4e84196222ef1",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pending_task": {
                                            "$ref": "#/components/schemas/PendingTask"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pending Task not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get pending task or next task",
                "operationId": "78bea44d7948a582dcd3468e5ce0545b",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Create pending task",
                "operationId": "createPendingTask",
                "requestBody": {
                    "description": "Create pending task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/filter": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get pending task filter ",
                "operationId": "be0a47746e2fd7f2ab429f284ebd2865",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "vehicle",
                                "reception"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "approved",
                        "in": "query",
                        "description": "Approved",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "receptionNull",
                        "in": "query",
                        "description": "Reception null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/filter-download-file": {
            "get": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Get pending task filter download file",
                "operationId": "4b4e3b61e63da4fee29abb5e7f8f22f2",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "task",
                                "vehicle",
                                "reception",
                                "userStart",
                                "userEnd",
                                "statePendingTask",
                                "groupTask"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTaskPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/finish-all": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Finis all pending tasks",
                "operationId": "finishAllPendingTask",
                "requestBody": {
                    "description": "Finish all",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pending_task_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/update/{id}": {
            "put": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Updated pending task",
                "operationId": "updatePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated pending task  object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pending task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/delete/{id}": {
            "delete": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Delete pending task",
                "operationId": "deletePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/start-pending-task": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Start pending task",
                "operationId": "StartPendingTask",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pending_task_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/cancel-pending-task": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Cancel pending task",
                "operationId": "CancelPendingTask",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pending_task_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/finish-pending-task": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Finish pending task",
                "operationId": "finishPendingTask",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pending_task_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/by-state/by-campa": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "get Pending Task By StateCampa",
                "operationId": "getPendingTaskByStateCampa",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "state_pending_task_id": {
                                        "type": "integer"
                                    },
                                    "campas": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Campa"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "campas": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Campa"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#/components/schemas/PendingTask"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/by-plate": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Pending task by plate",
                "operationId": "getPendingTaskByPlate",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plate": {
                                        "type": "string"
                                    },
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTaskWithVehicle"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/by-vehicle": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Pending task by vehicle",
                "operationId": "getPendingTaskByVehicle",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/order": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Order Pending task",
                "operationId": "orderPendingTask",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pending_tasks": {
                                        "$ref": "#/components/schemas/PendingTask"
                                    },
                                    "vehicle_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/add": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Create pending task",
                "operationId": "addPendingTask",
                "requestBody": {
                    "description": "Add pending task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/add-pending-task-finished": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Add pending task finished",
                "operationId": "AddPendingTaskFinished",
                "requestBody": {
                    "description": "Add pending task finished",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/update-approved": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Updated approved",
                "operationId": "dac58b5765a49de6f0be408f490326b6",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "questionnaire_id": {
                                        "type": "integer"
                                    },
                                    "task_id": {
                                        "type": "integer"
                                    },
                                    "approved": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pending-tasks/transfer": {
            "post": {
                "tags": [
                    "pending-tasks"
                ],
                "summary": "Create transfer task",
                "operationId": "435da4fd6f8688efde92ad336cda9d25",
                "requestBody": {
                    "description": "Create transfer task",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task Transfer added!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/people-for-reports/getall": {
            "get": {
                "tags": [
                    "people-for-reports"
                ],
                "summary": "Get all people for reports",
                "operationId": "f60848cc9bce9ee7ba2ae71c28e4792a",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PeopleForReportPaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/provinces/getall": {
            "get": {
                "tags": [
                    "provinces"
                ],
                "summary": "Get all provinces",
                "operationId": "83e87a5a16564a6f09d7dc8669712ad1",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProvincePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/provinces/{id}": {
            "get": {
                "tags": [
                    "provinces"
                ],
                "summary": "Get province by ID",
                "operationId": "4008b1ab9f09e5fffe2e57a1e0df6ec5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Province not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/provinces": {
            "post": {
                "tags": [
                    "provinces"
                ],
                "summary": "Create provinces",
                "operationId": "createProvince",
                "requestBody": {
                    "description": "Create province object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Province"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/provinces/update/{id}": {
            "put": {
                "tags": [
                    "provinces"
                ],
                "summary": "Updated province",
                "operationId": "updateProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated province object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Province"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Province not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/provinces/delete/{id}": {
            "delete": {
                "tags": [
                    "provinces"
                ],
                "summary": "Delete province",
                "operationId": "deleteProvince",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Province not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-operations/getall": {
            "get": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Get all purchase operatons",
                "operationId": "257c5ac9223081fdae1d3b2ae13df39d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PurchaseOperation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-operations/{id}": {
            "get": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Get purchase operation by ID",
                "operationId": "c502449c88d9a3e692bcb26a45c0cfe8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase Operation not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-operations": {
            "post": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Create purchase operation",
                "operationId": "createPurchaseOperation",
                "requestBody": {
                    "description": "Create purchase operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOperation"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/purchase-operations/update/{id}": {
            "put": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Updated purchase operation",
                "operationId": "updatePurchaseOperation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseOperation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseOperation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase operation not found"
                    }
                }
            }
        },
        "/api/purchase-operations/delete/{id}": {
            "delete": {
                "tags": [
                    "purchase-operations"
                ],
                "summary": "Delete purchase operation",
                "operationId": "deletePurchaseOperation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Purchase operation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/question-answers": {
            "post": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Create question answer",
                "operationId": "createQuestionAnswer",
                "requestBody": {
                    "description": "Create questionnaire object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionAnswer"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/question-answers/checklist": {
            "post": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Create checklist",
                "operationId": "createChecklist",
                "requestBody": {
                    "description": "Create checklist",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "questions": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/question-answers/update/{id}": {
            "put": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Updated question answer",
                "operationId": "updateQuestionAnswer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated question answer object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionAnswer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionAnswer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question answer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/question-answers/update-response/{id}": {
            "put": {
                "tags": [
                    "question-answers"
                ],
                "summary": "Updated response",
                "operationId": "updateResponseQuestionAnswer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated response object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionAnswer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionAnswer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question answer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/questions/getall": {
            "get": {
                "tags": [
                    "questions"
                ],
                "summary": "Get all type questions",
                "operationId": "4d9354eafb654909f0747d8e8705d498",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Question"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/questions": {
            "post": {
                "tags": [
                    "questions"
                ],
                "summary": "Create question",
                "operationId": "createQuestion",
                "requestBody": {
                    "description": "Create defleet variable object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Question"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/questions/{id}": {
            "delete": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Delete question",
                "operationId": "deleteQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/questionnaire/": {
            "get": {
                "tags": [
                    "questionnaire"
                ],
                "summary": "Get all questionnaires",
                "operationId": "2a7cbd43f9d089e46b14044453c530d0",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/questionnaire/{id}": {
            "get": {
                "tags": [
                    "questionnaires"
                ],
                "summary": "Get questionnaire by ID",
                "operationId": "194e74ce4321001fa61c99d422713f3b",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Questionnaire not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reception": {
            "get": {
                "tags": [
                    "receptions"
                ],
                "summary": "Get all receptions",
                "operationId": "80162ad00105929a329cfc6ebc7e0fb0",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "subStatesNotIds[]",
                        "in": "query",
                        "description": "A list of subStatesNotIds",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "vehiclePlate",
                        "in": "query",
                        "description": "Plate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "whereHasVehicle",
                        "in": "query",
                        "description": "Where has vehicle",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "receptions"
                ],
                "summary": "Create reception",
                "operationId": "createReception",
                "requestBody": {
                    "description": "Create reception object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reception"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reception/{id}": {
            "get": {
                "tags": [
                    "receptions"
                ],
                "summary": "Get reception by ID",
                "operationId": "42acd3b0bad65239817b1d78b3629310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reception not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "receptions"
                ],
                "summary": "Updated reception",
                "operationId": "updateReception",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated reception object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Reception"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reception not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/regions/getall": {
            "get": {
                "tags": [
                    "regions"
                ],
                "summary": "Get all regions",
                "operationId": "180f26ae8864ebdfbdce25f080a0db58",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Region"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/regions/{id}": {
            "get": {
                "tags": [
                    "regions"
                ],
                "summary": "Get region by ID",
                "operationId": "779ac32b1c8e2e65fe3445678d28c01c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/regions": {
            "post": {
                "tags": [
                    "regions"
                ],
                "summary": "Create regions",
                "operationId": "createRegion",
                "requestBody": {
                    "description": "Create region object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Region"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/regions/update/{id}": {
            "put": {
                "tags": [
                    "regions"
                ],
                "summary": "Updated region",
                "operationId": "updateRegion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated region object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Region"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Region"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/regions/delete/{id}": {
            "delete": {
                "tags": [
                    "regions"
                ],
                "summary": "Delete region",
                "operationId": "deleteRegion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/requests/getall": {
            "get": {
                "tags": [
                    "requests"
                ],
                "summary": "Get all requests",
                "operationId": "e8dcd15f74956224d564957e496ad79f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Request"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/requests/{id}": {
            "get": {
                "tags": [
                    "requests"
                ],
                "summary": "Get request by ID",
                "operationId": "a7c528026749427435722f1a521cdd56",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/requests/delete/{id}": {
            "delete": {
                "tags": [
                    "requests"
                ],
                "summary": "Delete request",
                "operationId": "deleteRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-reservations": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "get reservation active",
                "operationId": "getReservationActive",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reservation": {
                                            "$ref": "#/components/schemas/Reservation"
                                        },
                                        "with[]": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-reservations/by-campa": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "get reservation active by campa",
                "operationId": "getReservationActiveByCampa",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "campa_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/update": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "Updatee",
                "operationId": "UpdateReservation",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reservation_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationWithTransport"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-reservation/by-vehicle": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "get reservation by vehicle",
                "operationId": "getReservationsByVehicle",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/without-order": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "vehicle whitout order",
                "operationId": "vehicleWithoutOrder",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/without-contract": {
            "post": {
                "tags": [
                    "reservations"
                ],
                "summary": "vehicle whitout contract",
                "operationId": "vehicleWithoutContract",
                "requestBody": {
                    "description": "Reservation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation-time": {
            "post": {
                "tags": [
                    "reservation-times"
                ],
                "summary": "Get by Company",
                "operationId": "getByCompany",
                "requestBody": {
                    "description": "Reservation time with company",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationTimeWithCompany"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation-time/create": {
            "post": {
                "tags": [
                    "reservation-times"
                ],
                "summary": "Create reservation time",
                "operationId": "createReservationTime",
                "requestBody": {
                    "description": "Create reservation time object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationTime"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationTime"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation-time/update": {
            "put": {
                "tags": [
                    "reservation-times"
                ],
                "summary": "Update reservation time",
                "operationId": "updateReservationTime",
                "requestBody": {
                    "description": "Update reservation time",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "company_id": {
                                        "type": "integer"
                                    },
                                    "hours": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationTime"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/getall": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles",
                "operationId": "507d3b8d25806ea50f88f6be4c4b44db",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "roles"
                ],
                "summary": "Get role by ID",
                "operationId": "34930a00dde2bbf0adff67c97ba28de9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "post": {
                "tags": [
                    "roles"
                ],
                "summary": "Create role",
                "operationId": "createRole",
                "requestBody": {
                    "description": "Create role object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/update/{id}": {
            "put": {
                "tags": [
                    "roles"
                ],
                "summary": "Updated role",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated role object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles/delete/{id}": {
            "delete": {
                "tags": [
                    "roles"
                ],
                "summary": "Delete role",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/severity-damages": {
            "get": {
                "tags": [
                    "severity-damages"
                ],
                "summary": "Get all severity-damages",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeverityDamage"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "severity-damages"
                ],
                "summary": "Create severity damage",
                "operationId": "createSeverityDamage",
                "requestBody": {
                    "description": "Create severity damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeverityDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeverityDamage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/severity-damages/{id}": {
            "put": {
                "tags": [
                    "severity-damages"
                ],
                "summary": "Updated severity damage",
                "operationId": "updateSeverityDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated severity damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SeverityDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SeverityDamage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Severity damage not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/squares": {
            "get": {
                "tags": [
                    "squares"
                ],
                "summary": "Get all squares",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SquarePaginate"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "squares"
                ],
                "summary": "Create square",
                "operationId": "createSquare",
                "requestBody": {
                    "description": "Create square object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Square"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Square"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/squares/{id}": {
            "put": {
                "tags": [
                    "squares"
                ],
                "summary": "Updated square",
                "operationId": "updateSquare",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated square object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Square"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Square"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Square not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/getall": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Get all states",
                "operationId": "2434f79655220bf55bb73d8bda7b2040",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/{id}": {
            "get": {
                "tags": [
                    "states"
                ],
                "summary": "Get state by ID",
                "operationId": "b5afa7376a4d26ba0a60c8d21eb8706b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states": {
            "post": {
                "tags": [
                    "states"
                ],
                "summary": "Create state",
                "operationId": "createState",
                "requestBody": {
                    "description": "Create state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/update/{id}": {
            "put": {
                "tags": [
                    "states"
                ],
                "summary": "Updated state",
                "operationId": "updateState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/State"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states/delete/{id}": {
            "delete": {
                "tags": [
                    "states"
                ],
                "summary": "Delete state",
                "operationId": "deleteState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states-pending-tasks/getall": {
            "get": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Get all state pending tasks",
                "operationId": "6b7314aae8dbc5ed48daba625ad7b966",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StatePendingTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states-pending-tasks/{id}": {
            "get": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Get state pending task by ID",
                "operationId": "8574b8f4b9fb6c1eabd96bed391bb03a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State Pending Task not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states-pending-tasks": {
            "post": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Create state pending task",
                "operationId": "createStatePendingTask",
                "requestBody": {
                    "description": "Create state pending task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatePendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states-pending-tasks/update/{id}": {
            "put": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Updated purchase state pending task",
                "operationId": "updateStatePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated purchase operation object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatePendingTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatePendingTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State pending task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/states-pending-tasks/delete/{id}": {
            "delete": {
                "tags": [
                    "state-pending-tasks"
                ],
                "summary": "Delete state pending task",
                "operationId": "deleteStatePendingTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State pending task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/state-requests/getall": {
            "get": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Get all state requests",
                "operationId": "b60131077945bf093dc7391458a2a27e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StateRequest"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/state-requests/{id}": {
            "get": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Get state request by ID",
                "operationId": "67e09ae7607eea7aa122047bd0fbf673",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State Request not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/state-requests": {
            "post": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Create state request",
                "operationId": "createStateRequest",
                "requestBody": {
                    "description": "Create state request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/state-requests/update/{id}": {
            "put": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Updated state request",
                "operationId": "updateStateRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated state request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StateRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/state-requests/delete/{id}": {
            "delete": {
                "tags": [
                    "state-requests"
                ],
                "summary": "Delete state request",
                "operationId": "deleteStateRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "State request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/stock-by-state": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get stock by state",
                "operationId": "7bc16bf861fe55ff0971564bd0ec5e20",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "state": {
                                            "type": "string"
                                        },
                                        "sub_state": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/stock-by-month": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get stock by month",
                "operationId": "cc380df1144972e807445034586500b0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/average-by-substate": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get average by substate",
                "operationId": "efb843a0610c596df194b4dd4f643b33",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AverageSubstate"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/stock-by-channel": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get average by type model order",
                "operationId": "86e3acf0d9118146dfb4c44eaf0e6271",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AverageTypeModelOrder"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/average-by-task": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get average by task",
                "operationId": "ed6d53bb66eab5580ed3d441ef6071d7",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AveragePendingTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/half-task-start": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get half task start",
                "operationId": "e2cc313cb9315174623672249e0c7391",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HalfTaskStart"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/execution-time": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get execution time",
                "operationId": "08fbbd989d2f52c541107bb1c715917e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HalfTaskStart"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/average-time-sub-state": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get average time sub state",
                "operationId": "381892b67bbbe954d65e2652e708f0a0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StateChange"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/statistics/time-approval": {
            "get": {
                "tags": [
                    "statistics"
                ],
                "summary": "Get time approval",
                "operationId": "1246d25cbd6451776ad421517ff1edb6",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeApproval"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/status-damages": {
            "get": {
                "tags": [
                    "status-damages"
                ],
                "summary": "Get all status damages",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StatusDamage"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "status-damages"
                ],
                "summary": "Create status damage",
                "operationId": "createStatusDamage",
                "requestBody": {
                    "description": "Create status damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusDamage"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/status-damages/{id}": {
            "put": {
                "tags": [
                    "status-damages"
                ],
                "summary": "Updated status damage",
                "operationId": "updateStatusDamage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated status damage object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StatusDamage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusDamage"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Status damage not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/streets": {
            "get": {
                "tags": [
                    "streets"
                ],
                "summary": "Get all streets",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreetWithZone"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "streets"
                ],
                "summary": "Create street",
                "operationId": "createStreet",
                "requestBody": {
                    "description": "Create street object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Street"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Street"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/streets/{id}": {
            "put": {
                "tags": [
                    "streets"
                ],
                "summary": "Updated street",
                "operationId": "updateStreet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated street object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Street"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Street"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Street not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sub-states/getall": {
            "get": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Get all sub states",
                "operationId": "b3eb2aa43c20d41476a6648a6d4cbc3b",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "stateIds[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "1",
                                "2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SubStateWithState"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sub-states/{id}": {
            "get": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Get sub state by ID",
                "operationId": "f167021ecc8143de269d884d671e63d7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub State not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sub-states": {
            "post": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Create sub state",
                "operationId": "createSubState",
                "requestBody": {
                    "description": "Create sub state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubState"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sub-states/update/{id}": {
            "put": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Updated sub state",
                "operationId": "updateSubState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated sub state object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubState"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubState"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub state not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/sub-states/delete/{id}": {
            "delete": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Delete sub state",
                "operationId": "deleteSubState",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub state not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/getall": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get all tasks",
                "operationId": "69e1dfe714eb54caafa9f62b801c764e",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TaskWithSubStateAndTypeTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "tasks"
                ],
                "summary": "Get task by ID",
                "operationId": "5df5c9bcba675f8a32805eae92d8e0d2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "post": {
                "tags": [
                    "tasks"
                ],
                "summary": "Create task",
                "operationId": "createTask",
                "requestBody": {
                    "description": "Create task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/update/{id}": {
            "put": {
                "tags": [
                    "tasks"
                ],
                "summary": "Updated task",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/delete/{id}": {
            "delete": {
                "tags": [
                    "tasks"
                ],
                "summary": "Delete task",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/taxes": {
            "get": {
                "tags": [
                    "taxes"
                ],
                "summary": "Get all taxes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tax"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade-states/getall": {
            "get": {
                "tags": [
                    "trade-states"
                ],
                "summary": "Get all type trade states",
                "operationId": "ad41af42d57697ee2ac04b103157b0cc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TradeState"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transports/getall": {
            "get": {
                "tags": [
                    "transports"
                ],
                "summary": "Get all transports",
                "operationId": "369c7b135cf802070b4000e3ac736cb5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transport"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transports/{id}": {
            "get": {
                "tags": [
                    "transports"
                ],
                "summary": "Get transport by ID",
                "operationId": "821b1f145a0183547e18d534bebb3e53",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transport not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transports": {
            "post": {
                "tags": [
                    "transports"
                ],
                "summary": "Create transport",
                "operationId": "createTransport",
                "requestBody": {
                    "description": "Create transport object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transport"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transports/update/{id}": {
            "put": {
                "tags": [
                    "transports"
                ],
                "summary": "Updated transport",
                "operationId": "updateTransport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated transport object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Transport"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transport"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transport not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transports/delete/{id}": {
            "delete": {
                "tags": [
                    "transports"
                ],
                "summary": "Delete transport",
                "operationId": "deleteTransport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transport not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-budget-lines": {
            "get": {
                "tags": [
                    "type-budget-lines"
                ],
                "summary": "Get all type budget lines",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeBudgetLine"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-delivery-note": {
            "get": {
                "tags": [
                    "type-delivery-note"
                ],
                "summary": "Get all type delivery notes",
                "operationId": "117937717bf95a3d505a75a5d97d6e88",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeDeliveryNote"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-model-order": {
            "get": {
                "tags": [
                    "type-model-orders"
                ],
                "summary": "Get all type type model orders",
                "operationId": "bf438990fd16c65ff9cde8e126dfa75b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type_model_orders": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TypeModelOrder"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-requests/getall": {
            "get": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Get all type requests",
                "operationId": "013b2c2abe1284e593dc85837873aae3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeRequest"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-requests/{id}": {
            "get": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Get type request by ID",
                "operationId": "ba267cd13550cb59094502143e8b45b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Request not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-requests": {
            "post": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Create type request",
                "operationId": "createTypeRequest",
                "requestBody": {
                    "description": "Create type request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-requests/update/{id}": {
            "put": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Updated type request",
                "operationId": "updateTypeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated type request object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeRequest"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-requests/delete/{id}": {
            "delete": {
                "tags": [
                    "type-requests"
                ],
                "summary": "Delete type request",
                "operationId": "deleteTypeRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type request not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-reservations/getall": {
            "get": {
                "tags": [
                    "type-reservations"
                ],
                "summary": "Get all type type reservations",
                "operationId": "285ce32743a7cbb86181c430792c363a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeReservation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-tasks/getall": {
            "get": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Get all type tasks",
                "operationId": "ff2ebdabd089e115ffc241a849aa690f",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeTask"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-tasks/{id}": {
            "get": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Get type task by ID",
                "operationId": "7e1de222ba270f60445b3ed011edeac7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type Task not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-tasks": {
            "post": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Create type task",
                "operationId": "createTypeTask",
                "requestBody": {
                    "description": "Create type task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeTask"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-tasks/update/{id}": {
            "put": {
                "tags": [
                    "type-tasks"
                ],
                "summary": "Updated type task",
                "operationId": "updateTypeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated type task object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeTask"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeTask"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/types-tasks/delete/{id}": {
            "delete": {
                "tags": [
                    "sub-states"
                ],
                "summary": "Delete state",
                "operationId": "deleteTypeTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Sub state not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/type-user-app": {
            "get": {
                "tags": [
                    "type-user-apps"
                ],
                "summary": "Get all type user app",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeUserApp"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/getall": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "faebafc217a0fbd8be95cd9fef5723cd",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserWithCampasRoleAndCompany"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "operationId": "a58b2476400765004bf1868f8d787e0c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "campas": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Campa"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Create user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/create-without-password": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create user without password",
                "operationId": "createUserWithoutPassword",
                "requestBody": {
                    "description": "Create user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/update/{id}": {
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Updated user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/delete/{id}": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/role/{role_id}": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "get Users By Role",
                "operationId": "getUsersByRole",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "relationship_name:campas,company"
                                        ]
                                    },
                                    "campas": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "allOf": [
                                        {
                                            "properties": {
                                                "company": {
                                                    "$ref": "#/components/schemas/Company"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "campas": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Campa"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/download": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Download",
                "operationId": "37d7f95e4a4be214e8d820c3655d0ac6",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Documento generandose, en cuanto esté listo, le llegará a su correo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get all vehicles",
                "operationId": "facc3f3e03aee5d8e3b6f67151ade453",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Create vehicle",
                "operationId": "createVehicle",
                "requestBody": {
                    "description": "Create Vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/{id}": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle by ID",
                "operationId": "c0869ca2118f7059ceb09f1fea869dfd",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclesByID"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/update/{id}": {
            "put": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Updated vehicle",
                "operationId": "updateVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        },
                                        "with[]": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/verify-plate": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Verify plate",
                "operationId": "verifyPlate",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    },
                                    "defleet": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "registered": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "vehicle_delivery": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    },
                                    "order_tasks": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": "[39, 11, 2, 3, 4, 41, 5, 6, 7, 8]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        },
                                        "with[]": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/defleet": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle defleet ",
                "operationId": "8903e7242868328eb11ade7658cc747d",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/delete/{id}": {
            "delete": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Delete vehicle",
                "operationId": "deleteVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/return/{id}": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Return vehicle",
                "operationId": "returnVehicle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "ID of Vehicle",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "states": {
                                        "$ref": "#/components/schemas/State"
                                    },
                                    "date_start": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "date_end": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "campas": {
                                        "$ref": "#/components/schemas/Campa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/delete-massive": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Delete Massive",
                "operationId": "deleteMassive",
                "requestBody": {
                    "description": "Plates",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicles deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/create-from-excel": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Create from Excel",
                "operationId": "createFromExcel",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicles created!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-with-reservation-without-order/campa": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "get Vehicles With Reservation Without Order Campa",
                "operationId": "efac947c329c54f9e83130042a1e8c75",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-with-reservation-without-contract/campa": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "get vehicle with reservation without contract campa",
                "operationId": "getVehiclesWithReservationWithoutContractCampa",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vehicle"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/filter": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle filter",
                "operationId": "b6abf2b2017107b626bbb457fb099620",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "budgetLastGroupTaskIds"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaNull",
                        "in": "query",
                        "description": "Campa null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    },
                    {
                        "name": "withUbication",
                        "in": "query",
                        "description": "With Ubication",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "approvedPendingTasksNotNull",
                        "in": "query",
                        "description": "approved pending tasks not null",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "plate",
                        "in": "query",
                        "description": "Plate",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "defleetingAndDelivery",
                        "in": "query",
                        "description": "defleetingAndDelivery",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campas[]",
                        "in": "query",
                        "description": "A list of campas",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "stateNotIds[]",
                        "in": "query",
                        "description": "A list of stateNotIds",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                10,
                                4,
                                5
                            ]
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "states[]",
                        "in": "query",
                        "description": "A list of states",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicles": {
                                            "$ref": "#/components/schemas/VehiclePaginate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/filter-download-file": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle filter download file ",
                "operationId": "a45088609799d1b1de43e7d1637ee610",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "task",
                                "subState",
                                "statePendingTask",
                                "incidences",
                                "budgetPendingTasks",
                                "stateBudgetPendingTask"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/reserved": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "get vehicle reserved",
                "operationId": "b13a1c325d57767043acfde2aa193b1c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/totals/by-state'": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "get total vehicle by state",
                "operationId": "368a9ac34e7bfdceee8c20b066a6e45c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/request/defleet'": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "get request defleet",
                "operationId": "085711ff83e50673855d03ab70fa61a9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/verify-plate-reception": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Verify plate reception",
                "operationId": "verifyPlateReception",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plate": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/by-state-date": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Vehicles by state",
                "operationId": "vehicleByState",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plate": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/State"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Vehicle"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/set-vehicle-rented": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Set vehicle renteed",
                "operationId": "setVehicleRented",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicles": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Done!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/defleet/{id}": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Get defleet by id",
                "operationId": "dbfaa6fa47fd22bab1a97e70d215e2a5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Vehicle"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicles/undefleet/{id}": {
            "get": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Undefleet by id",
                "operationId": "f757a566b4b84185db6961d8d0fb98e6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Defleet not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/defleeting": {
            "post": {
                "tags": [
                    "vehicles"
                ],
                "summary": "Defleeting",
                "operationId": "defleeting",
                "requestBody": {
                    "description": "",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "plates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicles": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vehicle"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-exits": {
            "get": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Get all type vehicle exits",
                "operationId": "d7f0f9ab9b0f21c38c564ab75a8ac5dc",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "campaIds[]",
                        "in": "query",
                        "description": "A list of campaIDs",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    },
                    {
                        "name": "vehicleIds[]",
                        "in": "query",
                        "description": "A list of vehicle Ids",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "example": [
                                1,
                                2
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Create vehicle exit",
                "operationId": "createVehicleExit",
                "requestBody": {
                    "description": "Create vehicle exit object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleExit"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-exits/{id}": {
            "get": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Get vehicle exit by ID",
                "operationId": "305ab29017b7647c2828246231fb2356",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Exit not found."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "vehicle-exits"
                ],
                "summary": "Updated vehicle exit model",
                "operationId": "updateVehicleExit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle exit object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleExit"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Exit not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-models": {
            "get": {
                "tags": [
                    "vehicle-models"
                ],
                "summary": "Get all vehicle models",
                "operationId": "9daa96b6e2e7ba35d4767f5e2249beff",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VehicleModel"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "vehicle-models"
                ],
                "summary": "Create vehicle model",
                "operationId": "createVehicleModel",
                "requestBody": {
                    "description": "Create vehicle model object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-models/{id}": {
            "put": {
                "tags": [
                    "vehicle-models"
                ],
                "summary": "Updated vehicle model",
                "operationId": "updateVehicleModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated vehicle model object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle Model not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-pictures": {
            "post": {
                "tags": [
                    "vehicle-pictures"
                ],
                "summary": "Create vehicle picture",
                "operationId": "createVehiclePicture",
                "requestBody": {
                    "description": "Create vehicle picture object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePicture"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePicture"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-pictures/delete/{id}": {
            "delete": {
                "tags": [
                    "vehicle-pictures"
                ],
                "summary": "Delete vehicle pictures",
                "operationId": "deleteVehiclePicture",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Vehicle picture not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-pictures/delete-pic-by-place": {
            "post": {
                "tags": [
                    "vehicle-pictures"
                ],
                "summary": "Delete pictures by place",
                "operationId": "deletePictureByPlace",
                "requestBody": {
                    "description": "Delete pictures by place",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Picture deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/vehicle-pictures/by-vehicle": {
            "post": {
                "tags": [
                    "vehicle-pictures"
                ],
                "summary": "Get pictures by vehicle",
                "operationId": "getPicturesByVehicle",
                "requestBody": {
                    "description": "Get pictures by vehicle",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer"
                                    },
                                    "with[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicle_pictures": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehiclePicture"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zones": {
            "get": {
                "tags": [
                    "zones"
                ],
                "summary": "Get all zones",
                "parameters": [
                    {
                        "name": "with[]",
                        "in": "query",
                        "description": "A list of relatonship",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "example": [
                                "relationship1",
                                "relationship2"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Zone"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An error has occurred."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "zones"
                ],
                "summary": "Create zone",
                "operationId": "createZone",
                "requestBody": {
                    "description": "Create zone object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Zone"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zone"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zones/{id}": {
            "put": {
                "tags": [
                    "zones"
                ],
                "summary": "Updated zones",
                "operationId": "updateZone",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id that to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated zone object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Zone"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Zone"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Zone not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Links": {
                "properties": {
                    "active": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Paginate": {
                "properties": {
                    "current_page": {
                        "type": "integer"
                    },
                    "first_page_url": {
                        "type": "string"
                    },
                    "from": {
                        "type": "integer"
                    },
                    "last_page": {
                        "type": "integer"
                    },
                    "last_page_url": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Links"
                        }
                    },
                    "next_page_url": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "per_page": {
                        "type": "string"
                    },
                    "per_page_url": {
                        "type": "string"
                    },
                    "to": {
                        "type": "integer"
                    },
                    "total": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "AverageSubstate": {
                "allOf": [
                    {
                        "properties": {
                            "sub_state": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "average": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AverageTypeModelOrder": {
                "allOf": [
                    {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "total": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AveragePendingTask": {
                "allOf": [
                    {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "total": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "average": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "HalfTaskStart": {
                "allOf": [
                    {
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "duration": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "TimeApproval": {
                "allOf": [
                    {
                        "properties": {
                            "month": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "year": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "total": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "average": {
                                "type": "number"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Accessory": {
                "title": "Accessory model",
                "description": "Accessory model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "accessory_type_id": {
                        "title": "Type of Accessory ID",
                        "description": "Type of the accessory id",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the accessory",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AccessoryType": {
                "title": "Accessory type model",
                "description": "Accessory type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AccessoryVehicle": {
                "title": "Accessory vehicle model",
                "description": "Accessory vehicle model",
                "properties": {
                    "accessory_id": {
                        "title": "Accessory ID",
                        "description": "Accessory ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Brand": {
                "title": "Brand model",
                "description": "Brand model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the Brand",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Budget": {
                "title": "Budget model",
                "description": "Budget model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "order_id": {
                        "title": "Order ID",
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_total": {
                        "title": "Sub total",
                        "description": "Sub total",
                        "type": "number",
                        "format": "double"
                    },
                    "tax": {
                        "title": "Tax",
                        "description": "Tax",
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "title": "Total",
                        "description": "Total",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BudgetPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Budget"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "BudgetLine": {
                "title": "Budget line model",
                "description": "Budget line model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "budget_id": {
                        "title": "Budget ID",
                        "description": "Budget ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_budget_line_id": {
                        "title": "Type of Budget Line ID",
                        "description": "Type of Budget Line ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "tax_id": {
                        "title": "Tax ID",
                        "description": "Tax ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price",
                        "type": "number",
                        "format": "double"
                    },
                    "amount": {
                        "title": "Amount",
                        "description": "Amount",
                        "type": "number",
                        "format": "double"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "sub_total": {
                        "title": "Sub total",
                        "description": "Sub total",
                        "type": "number",
                        "format": "double"
                    },
                    "tax": {
                        "title": "Tax",
                        "description": "Tax",
                        "type": "number",
                        "format": "double"
                    },
                    "total": {
                        "title": "Total",
                        "description": "Total",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "when was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "when was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "BudgetLinePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BudgetLine"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "BudgetPendingTask": {
                "title": "Budget pending task model",
                "description": "Budget pending task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "role_id": {
                        "title": "Role ID",
                        "description": "Role ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_budget_pending_task_id": {
                        "title": "State of Budget Pending Task ID",
                        "description": "State of Budget Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "code_authorization": {
                        "title": "Code of Authorization",
                        "description": "Code of Authorization",
                        "type": "integer",
                        "format": "int32"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string",
                        "format": "url"
                    },
                    "approved_by": {
                        "title": "Approved by",
                        "description": "Approved by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "declined_by": {
                        "title": "Declined by",
                        "description": "Declined by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment": {
                        "title": "Comment",
                        "description": "Comment",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BudgetPendingTaskPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BudgetPendingTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Campa": {
                "title": "Campa model",
                "description": "Campa model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_id": {
                        "title": "Province ID",
                        "description": "Province ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "location": {
                        "title": "location",
                        "description": "Location",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Status",
                        "type": "boolean"
                    },
                    "ocupation": {
                        "title": "Ocupation",
                        "description": "Ocupation",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CampaTypeModelOrder": {
                "title": "Campa type model order model",
                "description": "Campa type model order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CampaUser": {
                "title": "Campa User model",
                "description": "Campa User model",
                "properties": {
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category model",
                "description": "Category model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Chat": {
                "title": "Chat model",
                "description": "Chat model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sent_user_app": {
                        "title": "Sent user app",
                        "description": "Sent user app",
                        "type": "boolean"
                    },
                    "message": {
                        "title": "Message",
                        "description": "Message",
                        "type": "string"
                    },
                    "read": {
                        "title": "Read",
                        "description": "Read",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Message": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Color": {
                "title": "Color model",
                "description": "Color model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "title": "Comment model",
                "description": "Comment model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "string",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CommentPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Company": {
                "title": "Company model",
                "description": "Company model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "tradename": {
                        "title": "Tradename",
                        "description": "Tradename",
                        "type": "string"
                    },
                    "nif": {
                        "title": "Nif",
                        "description": "Nif",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "location": {
                        "title": "Location",
                        "description": "Location",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "logo": {
                        "title": "Logo",
                        "description": "Logo",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CompanyWithSubStateAndTypeTask": {
                "allOf": [
                    {
                        "properties": {
                            "type_task": {
                                "$ref": "#/components/schemas/TypeTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "sub_state": {
                                "$ref": "#/components/schemas/SubStateWithState"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Company"
                    }
                ]
            },
            "CompanyPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CompanyWithSubStateAndTypeTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Customer": {
                "title": "Customer model",
                "description": "Customer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_id": {
                        "title": "Province ID",
                        "description": "Province ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "cif": {
                        "title": "Cif",
                        "description": "Cif",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CustomerPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Damage": {
                "title": "Damage model",
                "description": "Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_type_id": {
                        "title": "Type of Damage ID",
                        "description": "Type of Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "severity_damage_id": {
                        "title": "Severity Damage ID",
                        "description": "Severity Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status_damage_id": {
                        "title": "Status Damage ID",
                        "description": "Status Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "internal": {
                        "title": "Internal",
                        "description": "Internal",
                        "type": "boolean"
                    },
                    "datetime_close": {
                        "title": "Datetime close",
                        "description": "Datetinme close",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DamagePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DamageWith"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "DamageWith": {
                "allOf": [
                    {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "tasks": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "roles": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "comments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "severity_damage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SeverityDamage"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "status_damage": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/StatusDamage"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "damage_type": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DamageType"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Damage"
                    }
                ]
            },
            "DamageImage": {
                "title": "Damage image model",
                "description": "Damage image model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment_id": {
                        "title": "Comment ID",
                        "description": "Comment ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DamageImagePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DamageImage"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "DamageType": {
                "title": "Damage type model",
                "description": "Damage type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DefleetVariable": {
                "title": "Defleet variable model",
                "description": "Defleet variable model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "kms": {
                        "title": "Kms",
                        "description": "Kms",
                        "type": "integer",
                        "format": "int32"
                    },
                    "years": {
                        "title": "Years",
                        "description": "Years",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DefleetVariablePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DefleetVariable"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "DeliveryNote": {
                "title": "Delivery Note model",
                "description": "Delivery Note model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_delivery_note_id": {
                        "title": "Type of Delivery Note ID",
                        "description": "Type of Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "body": {
                        "title": "Body",
                        "description": "Body",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "DeliveryVehicle": {
                "title": "Delivery vehicle model",
                "description": "Delivery Vehicle model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_note_id": {
                        "title": "Delivery Note ID",
                        "description": "Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "data_delivery": {
                        "title": "Data Delivery",
                        "description": "Data Delivery",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "delivery_by": {
                        "title": "Delivery by",
                        "description": "Delivery by",
                        "type": "string"
                    },
                    "canceled_by": {
                        "title": "Canceled by",
                        "description": "Canceled by",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "DeliveryVehiclePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DeliveryVehicle"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "DeliveryVehicleWithTypeModelOrder": {
                "allOf": [
                    {
                        "properties": {
                            "type_model_order": {
                                "$ref": "#/components/schemas/TypeModelOrder"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/DeliveryVehicle"
                    }
                ]
            },
            "EstimatedDate": {
                "title": "Estimated Date model",
                "description": "Estimated Date model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason": {
                        "title": "Reason",
                        "description": "Reason",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "GroupTask": {
                "title": "Group Task model",
                "description": "Group Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "questionnaire_id": {
                        "title": "Questionnaire ID",
                        "description": "Questionnaire ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "approved_available": {
                        "title": "Approved available",
                        "description": "Approved available",
                        "type": "boolean"
                    },
                    "datetime_approved": {
                        "title": "Datetime approved",
                        "description": "Datetime approved",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_defleeting": {
                        "title": "Datetime defleeting",
                        "description": "Datetime defleeting",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "GroupTaskPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GroupTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "HistoryLocation": {
                "title": "History Location model",
                "description": "History Location model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "square_id": {
                        "title": "Square ID",
                        "description": "Square ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "HistoryLocationPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HistoryLocationWithVehicleAndUser"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "HistoryLocationWithVehicleAndUser": {
                "allOf": [
                    {
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "vehicle": {
                                "$ref": "#/components/schemas/VehicleWithTypeModelOrderAndVehicleModel"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/HistoryLocation"
                    }
                ]
            },
            "Incidence": {
                "title": "Incidence model",
                "description": "Incidence model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "incidence_type_id": {
                        "title": "Type of Incidence ID",
                        "description": "Type of Incidence ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "read": {
                        "title": "Read",
                        "description": "Read",
                        "type": "boolean"
                    },
                    "resolved": {
                        "title": "Resolved",
                        "description": "Resolved",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "IncidencePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Incidence"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "IncidenceImage": {
                "title": "Incidence image model",
                "description": "Incidence image model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "incidence_id": {
                        "title": "Incidence ID",
                        "description": "Incidence ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "comment_id": {
                        "title": "Comment ID",
                        "description": "Comment ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "IncidenceImagePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IncidenceImage"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "IncidenceType": {
                "title": "Incidence type model",
                "description": "Incidence type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "IncidentSubmission": {
                "title": "Incidence Submission model",
                "description": "Incidence Submission model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LoginLog": {
                "title": "Login Log model",
                "description": "Login Log model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "device_description": {
                        "title": "Device description",
                        "description": "Device description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LoginLogPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LoginLog"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "ManualQuestionnaire": {
                "title": "Manual Questionnaire model",
                "description": "Manual Questionnaire model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "filled_in": {
                        "title": "Filled ID",
                        "description": "Filled ID",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Monitor": {
                "title": "Monitor model",
                "description": "Monitor model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_by": {
                        "title": "Created by",
                        "description": "Created by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "MonitorPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Monitor"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "NotifyDamage": {
                "title": "Notify Damage model",
                "description": "Notify Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email",
                        "type": "string",
                        "format": "email"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Operation": {
                "title": "Operation model",
                "description": "Operation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "operation_type_id": {
                        "title": "Type of Operation ID",
                        "description": "Type of Operation ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "OperationType": {
                "title": "Operation Type model",
                "description": "Operation Type model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order model",
                "description": "Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "workshop_id": {
                        "title": "Workshop ID",
                        "description": "Workshop ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_id": {
                        "title": "State ID",
                        "description": "State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "id_gsp": {
                        "title": "ID GSP",
                        "description": "ID GSP",
                        "type": "integer",
                        "format": "int32"
                    },
                    "id_gsp_peritacion": {
                        "title": "ID GSP Expertise",
                        "description": "ID GSP Expert Opinion",
                        "type": "integer",
                        "format": "int32"
                    },
                    "fx_entrada": {
                        "title": "FX Entry",
                        "description": "FX Entry",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_fallo_check": {
                        "title": "FX Failed Check",
                        "description": "FX Failed Check",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_first_budget": {
                        "title": "FX First Budget",
                        "description": "FX First Budget",
                        "type": "string",
                        "format": "date-time"
                    },
                    "fx_prevista_reparacion": {
                        "title": "FX Planned Repair",
                        "description": "FX Planned Repair",
                        "type": "string",
                        "format": "date-time"
                    },
                    "id_gsp_certificado": {
                        "title": "ID GSP Certified",
                        "description": "ID GSP Certified",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PasswordResetCode": {
                "title": "Password Reset Code model",
                "description": "Password Reset Code model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "title": "Code",
                        "description": "Code",
                        "type": "integer",
                        "format": "int32"
                    },
                    "active": {
                        "title": "Status",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PasswordResetCodePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PasswordResetCode"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "PendingAuthorization": {
                "title": "Pending Authorization model",
                "description": "Pending Authorization model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_authorization_id": {
                        "title": "State Authorization ID",
                        "description": "State Authorization ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PendingDownload": {
                "title": "Pending Download model",
                "description": "Pending Download model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_document": {
                        "title": "Type of Document",
                        "description": "Type of Document",
                        "type": "string"
                    },
                    "sended": {
                        "title": "Sended",
                        "description": "Sended",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PendingTask": {
                "title": "Pending Task model",
                "description": "Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question_answer_id": {
                        "title": "Question Answer ID",
                        "description": "Question Answer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_pending_task_id": {
                        "title": "State Pending Task ID",
                        "description": "State Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_start_id": {
                        "title": "User Start ID",
                        "description": "User Start ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_end_id": {
                        "title": "User End ID",
                        "description": "User End ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "damage_id": {
                        "title": "Damage ID",
                        "description": "Damage ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "duration": {
                        "title": "duration",
                        "description": "duration",
                        "type": "number",
                        "format": "double"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "integer",
                        "format": "int32"
                    },
                    "approved": {
                        "title": "Approved",
                        "description": "Approved",
                        "type": "boolean"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "code_authorization": {
                        "title": "Code of Authorization",
                        "description": "Code of Authorization",
                        "type": "string"
                    },
                    "created_from_checklist": {
                        "title": "Created from Checklist",
                        "description": "Created from Checklist",
                        "type": "boolean"
                    },
                    "status_color": {
                        "title": "Status color",
                        "description": "Status color",
                        "type": "string"
                    },
                    "datetime_pending": {
                        "title": "Datetime pending",
                        "description": "Datetime pending",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_start": {
                        "title": "Datetime start",
                        "description": "Datetime start",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_pause": {
                        "title": "Datetime pause",
                        "description": "Datetime pause",
                        "type": "string",
                        "format": "date-time"
                    },
                    "total_paused": {
                        "title": "Total paused",
                        "description": "Total paused",
                        "type": "number",
                        "format": "double"
                    },
                    "datetime_finish": {
                        "title": "Datetime finish",
                        "description": "Datetime finish",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_state": {
                        "title": "Last Change State",
                        "description": "Last Change State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_sub_state": {
                        "title": "Last Change Sub State",
                        "description": "Last Change Sub State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "comment_state": {
                        "title": "Comment State",
                        "description": "Comment State",
                        "type": "string"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "PendingTaskPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PendingTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "LastDeliveryVehicle": {
                "allOf": [
                    {
                        "properties": {
                            "campa": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "campa_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "canceled_by": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "data_delivery": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "deleted_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "created_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "updated_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "delivery_note_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "pending_task_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle_id": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "LastPendingTaskDelivery": {
                "allOf": [
                    {
                        "properties": {
                            "last_delivery_vehicle": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LastDeliveryVehicleWithPendingTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/PendingTask"
                    }
                ]
            },
            "LastDeliveryVehicleWithPendingTask": {
                "allOf": [
                    {
                        "properties": {
                            "pending_task": {
                                "$ref": "#/components/schemas/PendingTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/PendingTask"
                    }
                ]
            },
            "PendingTaskWithVehicle": {
                "allOf": [
                    {
                        "properties": {
                            "vehicle": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/PendingTask"
                    }
                ]
            },
            "PendingTaskCanceled": {
                "title": "Pending Task Canceled model",
                "description": "Pending Task Canceled model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PeopleForReport": {
                "title": "People for Report model",
                "description": "People for Report model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_report_id": {
                        "title": "Type of Report ID",
                        "description": "Type of Report ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PeopleForReportPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PeopleForReport"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Province": {
                "title": "Province model",
                "description": "Province model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "region_id": {
                        "title": "Region ID",
                        "description": "Region ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "province_code": {
                        "title": "Province Code",
                        "description": "Province Code",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProvincePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "PurchaseOperation": {
                "title": "Purchase Operation model",
                "description": "Purchase Operation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "price": {
                        "title": "Price",
                        "description": "Price",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Question": {
                "title": "Question model",
                "description": "Question model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question": {
                        "title": "Question",
                        "description": "Question",
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "QuestionAnswer": {
                "title": "Question Answer model",
                "description": "Question Answer model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "questionnaire_id": {
                        "title": "Questionnaire ID",
                        "description": "Questionnaire ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "question_id": {
                        "title": "Question ID",
                        "description": "Question ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "response": {
                        "title": "Response",
                        "description": "Response",
                        "type": "boolean"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "description_response": {
                        "title": "Description response",
                        "description": "Description response",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "QuestionAnswerWithQuestionAndTask": {
                "allOf": [
                    {
                        "properties": {
                            "task": {
                                "$ref": "#/components/schemas/Task"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "question": {
                                "$ref": "#/components/schemas/Question"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Question"
                    }
                ]
            },
            "Questionnaire": {
                "title": "Questionnaire model",
                "description": "Questionnaire model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "file": {
                        "title": "File",
                        "description": "File",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LastQuestionnaire": {
                "allOf": [
                    {
                        "properties": {
                            "question_answers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/QuestionAnswerWithQuestionAndTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Questionnaire"
                    }
                ]
            },
            "QuestionnairePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Questionnaire"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "Reception": {
                "title": "Reception model",
                "description": "Reception model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type of Model Order ID",
                        "description": "Type of Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "finished": {
                        "title": "Finished",
                        "description": "Finished",
                        "type": "boolean"
                    },
                    "has_accessories": {
                        "title": "Has accesories",
                        "description": "Has accesories",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReceptionPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReceptionWithCampaAndVehicle"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "ReceptionWithCampaAndVehicle": {
                "allOf": [
                    {
                        "properties": {
                            "Vehicle": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "campa": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Reception"
                    }
                ]
            },
            "ReceptionWithAllApprovedPendingTaskAndGroupTask": {
                "allOf": [
                    {
                        "properties": {
                            "all_approved_pending_task": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/AllApprovedPendingTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "group_task": {
                                "$ref": "#/components/schemas/GroupTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "last_pending_task_delivery": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LastPendingTaskDelivery"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Reception"
                    }
                ]
            },
            "AllApprovedPendingTask": {
                "allOf": [
                    {
                        "properties": {
                            "Task": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "state_pending_task": {
                                "$ref": "#/components/schemas/StatePendingTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "user": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "user_start": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/PendingTask"
                    }
                ]
            },
            "Region": {
                "title": "Region model",
                "description": "Region model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Request": {
                "title": "Request model",
                "description": "Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "customer_id": {
                        "title": "Customer ID",
                        "description": "Customer ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_request_id": {
                        "title": "State Request ID",
                        "description": "State Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_request_id": {
                        "title": "Type Request ID",
                        "description": "Type Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "datetime_request": {
                        "title": "Datetime Request",
                        "description": "Datetime Request",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_decline": {
                        "title": "Datetime Decline",
                        "description": "Datetime Decline",
                        "type": "string",
                        "format": "date-time"
                    },
                    "datetime_approved": {
                        "title": "Datetime Approved",
                        "description": "Datetime Approved",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation model",
                "description": "Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "request_id": {
                        "title": "Request ID",
                        "description": "Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reservation_time": {
                        "title": "Reservation Time",
                        "description": "Reservation Time",
                        "type": "integer",
                        "format": "int32"
                    },
                    "dni": {
                        "title": "DNI",
                        "description": "DNI",
                        "type": "string"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "string"
                    },
                    "contract": {
                        "title": "Contract",
                        "description": "Contract",
                        "type": "string"
                    },
                    "planned_reservation": {
                        "title": "Planned Reservation",
                        "description": "Planned Reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "pickup_by_customer": {
                        "title": "Pickup by Customer",
                        "description": "Pickup by Customer",
                        "type": "boolean"
                    },
                    "transport_id": {
                        "title": "Transport ID",
                        "description": "Transport ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "actual_date": {
                        "title": "Actual Date",
                        "description": "Actual Date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_reservation_id": {
                        "title": "Type of Reservation ID",
                        "description": "Type of Reservation ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "active": {
                        "title": "Status",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReservationWithTransport": {
                "allOf": [
                    {
                        "properties": {
                            "transport": {
                                "$ref": "#/components/schemas/Transport"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Reservation"
                    }
                ]
            },
            "ReservationWithTypeModelOrder": {
                "allOf": [
                    {
                        "properties": {
                            "type_model_order": {
                                "$ref": "#/components/schemas/TypeModelOrder"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Reservation"
                    }
                ]
            },
            "ReservationTime": {
                "title": "Reservation Time model",
                "description": "Reservation Time model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "hours": {
                        "title": "Hours",
                        "description": "Hours",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ReservationTimeWithCompany": {
                "allOf": [
                    {
                        "properties": {
                            "company": {
                                "$ref": "#/components/schemas/Company"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/ReservationTime"
                    }
                ]
            },
            "Role": {
                "title": "Role model",
                "description": "Role model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SeverityDamage": {
                "title": "Severity Damage model",
                "description": "Severity Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Square": {
                "title": "Square model",
                "description": "Square model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "street_id": {
                        "title": "Street ID",
                        "description": "Street ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SquarePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SquareWithStreet"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "SquareWithStreet": {
                "allOf": [
                    {
                        "properties": {
                            "street": {
                                "$ref": "#/components/schemas/StreetWithZone"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Square"
                    }
                ]
            },
            "SquareWithStreetAndVehicle": {
                "allOf": [
                    {
                        "properties": {
                            "vehicle": {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "street": {
                                "$ref": "#/components/schemas/StreetWithZone"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Square"
                    }
                ]
            },
            "State": {
                "title": "State model",
                "description": "State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "type": {
                        "title": "Type",
                        "description": "Type",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateAuthorization": {
                "title": "State Authorization model",
                "description": "State Authorization model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateBudgetPendingTask": {
                "title": "State Budget Pending Task model",
                "description": "State Budget Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateChange": {
                "title": "State Change model",
                "description": "State Change model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "group_task_id": {
                        "title": "Group Task ID",
                        "description": "Group Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "total_time": {
                        "title": "Total Time",
                        "description": "Total Time",
                        "type": "integer",
                        "format": "int32"
                    },
                    "datetime_finish_sub_state": {
                        "title": "Datetime finish Sub state",
                        "description": "Datetime finish Sub state",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StatePendingTask": {
                "title": "State Pending Task model",
                "description": "State Pending Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StateRequest": {
                "title": "State Request model",
                "description": "State Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StatusDamage": {
                "title": "State Damage model",
                "description": "State Damage model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Street": {
                "title": "Street model",
                "description": "Street model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "zone_id": {
                        "title": "Zone ID",
                        "description": "Zone ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StreetWithZone": {
                "allOf": [
                    {
                        "properties": {
                            "zone": {
                                "$ref": "#/components/schemas/Zone"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Street"
                    }
                ]
            },
            "SubState": {
                "title": "Sub State model",
                "description": "Sub State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "state_id": {
                        "title": "State ID",
                        "description": "State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "display_name": {
                        "title": "Display Name",
                        "description": "Display Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SubStateWithState": {
                "allOf": [
                    {
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/State"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/SubState"
                    }
                ]
            },
            "SubStateChangeHistory": {
                "title": "Sub State Change History model",
                "description": "Sub State Change History model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task model",
                "description": "Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_task_id": {
                        "title": "Type of Task ID",
                        "description": "Type of Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "need_authorization": {
                        "title": "Need authorization",
                        "description": "Need authorization",
                        "type": "boolean"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "duration": {
                        "title": "Type of Task ID",
                        "description": "Duration",
                        "type": "number",
                        "format": "double"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TaskWithSubStateAndTypeTask": {
                "allOf": [
                    {
                        "properties": {
                            "type_task": {
                                "$ref": "#/components/schemas/TypeTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "sub_state": {
                                "$ref": "#/components/schemas/SubStateWithState"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Task"
                    }
                ]
            },
            "TaskReservation": {
                "title": "Task Reservation model",
                "description": "Task Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "request_id": {
                        "title": "Request ID",
                        "description": "Request ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "task_id": {
                        "title": "Task ID",
                        "description": "Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "order": {
                        "title": "Order",
                        "description": "Order",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Tax": {
                "title": "Tax model",
                "description": "Tax model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "Value",
                        "type": "number",
                        "format": "double"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TradeState": {
                "title": "Trade State model",
                "description": "Trade State model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Transport": {
                "title": "Transport model",
                "description": "Transport model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeBudgetLine": {
                "title": "Type Budget Line model",
                "description": "Type Budget Line model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeDeliveryNote": {
                "title": "Type Delivery Note model",
                "description": "Type Delivery Note model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeModelOrder": {
                "title": "Type Model Order model",
                "description": "Type Model Order model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReception": {
                "title": "Type Reception model",
                "description": "Type Reception model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReport": {
                "title": "Type Report model",
                "description": "Type Report model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeRequest": {
                "title": "Type Request model",
                "description": "Type Request model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeReservation": {
                "title": "Type Reservation model",
                "description": "Type Reservation model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeTask": {
                "title": "Type Task model",
                "description": "Type Task model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TypeUserApp": {
                "title": "Type User App model",
                "description": "Type User App model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User model",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "role_id": {
                        "title": "Role ID",
                        "description": "Role ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_user_app_id": {
                        "title": "Type of User ID",
                        "description": "Type of the user in the app ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "workshop_id": {
                        "title": "Workshop ID",
                        "description": "Workshop of the user ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname of the user",
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "Avatar of the user",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone of the user",
                        "type": "integer",
                        "format": "int32"
                    },
                    "first_login": {
                        "title": "First login",
                        "description": "First login of the user",
                        "type": "boolean"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Status of the user",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company of the user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserWithCampasAndRole": {
                "allOf": [
                    {
                        "properties": {
                            "campas": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "role": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ]
            },
            "UserWithCampasAndCompany": {
                "allOf": [
                    {
                        "properties": {
                            "company": {
                                "$ref": "#/components/schemas/Company"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "campas": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ]
            },
            "UserWithCampasRoleAndCompany": {
                "allOf": [
                    {
                        "properties": {
                            "company": {
                                "$ref": "#/components/schemas/Company"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "campas": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Campa"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "role": {
                                "$ref": "#/components/schemas/Role"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/User"
                    }
                ]
            },
            "Vehicle": {
                "title": "Vehicle model",
                "description": "Vehicle model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "remote_id": {
                        "title": "Remote ID",
                        "description": "Remote ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "category_id": {
                        "title": "Category ID",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sub_state_id": {
                        "title": "Sub State ID",
                        "description": "Sub State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "color_id": {
                        "title": "Color ID",
                        "description": "Color ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type_model_order_id": {
                        "title": "Type Model Order ID",
                        "description": "Type Model Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "ubication": {
                        "title": "Ubication",
                        "description": "Ubication",
                        "type": "string"
                    },
                    "plate": {
                        "title": "Plate",
                        "description": "Plate",
                        "type": "string"
                    },
                    "vehicle_model_id": {
                        "title": "Vehicle Model ID",
                        "description": "Vehicle Model ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "kms": {
                        "title": "KMS",
                        "description": "KMS",
                        "type": "integer",
                        "format": "int32"
                    },
                    "last_change_state": {
                        "title": "Last Change State",
                        "description": "Last Change State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_change_sub_state": {
                        "title": "Last Change Sub State",
                        "description": "Last Change Sub State",
                        "type": "string",
                        "format": "date-time"
                    },
                    "next_itv": {
                        "title": "Next ITV",
                        "description": "Next ITV",
                        "type": "string",
                        "format": "date-time"
                    },
                    "has_environment_label": {
                        "title": "Has environment label",
                        "description": "Has environment label",
                        "type": "boolean"
                    },
                    "observations": {
                        "title": "Observations",
                        "description": "Observations",
                        "type": "string"
                    },
                    "priority": {
                        "title": "Priority",
                        "description": "Priority",
                        "type": "boolean"
                    },
                    "version": {
                        "title": "Version",
                        "description": "Version",
                        "type": "string"
                    },
                    "vin": {
                        "title": "Vin",
                        "description": "Vin",
                        "type": "string"
                    },
                    "first_plate": {
                        "title": "First Plate",
                        "description": "First Plate",
                        "type": "string",
                        "format": "date-time"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Latitude",
                        "type": "string"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Longitude",
                        "type": "string"
                    },
                    "image": {
                        "title": "Image",
                        "description": "Image",
                        "type": "string"
                    },
                    "trade_state_id": {
                        "title": "Trade State ID",
                        "description": "Trade State ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "documentation": {
                        "title": "Documentation",
                        "description": "Documentation",
                        "type": "boolean"
                    },
                    "ready_to_delivery": {
                        "title": "Ready to delivery",
                        "description": "Ready to delivery",
                        "type": "boolean"
                    },
                    "created_by": {
                        "title": "Created by",
                        "description": "Created by",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "title": "Deleted at",
                        "description": "When was deleted",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_user_id": {
                        "title": "Deleted User ID",
                        "description": "Deleted User ID",
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "VehicleWithAccessories": {
                "allOf": [
                    {
                        "properties": {
                            "accesories": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Vehicle"
                    }
                ]
            },
            "VehiclesWith": {
                "allOf": [
                    {
                        "properties": {
                            "accessories": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Accessory"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "orders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "requests": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Request"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "reservations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "color": {
                                "$ref": "#/components/schemas/Color"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "campa": {
                                "$ref": "#/components/schemas/Campa"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "sub_state": {
                                "$ref": "#/components/schemas/SubStateWithState"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "type_model_order": {
                                "$ref": "#/components/schemas/TypeModelOrder"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle_model": {
                                "$ref": "#/components/schemas/VehicleModelWithBrand"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "square": {
                                "$ref": "#/components/schemas/SquareWithStreet"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "last_delivery_vehicle": {
                                "$ref": "#/components/schemas/LastDeliveryVehicle"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Vehicle"
                    }
                ]
            },
            "VehiclePaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VehiclesWith"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "VehiclesByID": {
                "allOf": [
                    {
                        "properties": {
                            "last_group_task": {
                                "$ref": "#/components/schemas/GroupTask"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "category": {
                                "$ref": "#/components/schemas/Category"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "sub_state": {
                                "$ref": "#/components/schemas/SubStateWithState"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "type_model_order": {
                                "$ref": "#/components/schemas/TypeModelOrder"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle_model": {
                                "$ref": "#/components/schemas/VehicleModelWithBrand"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "square": {
                                "$ref": "#/components/schemas/SquareWithStreet"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "last_questionnaire": {
                                "$ref": "#/components/schemas/LastQuestionnaire"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "receptions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Reception"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "reception": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ReceptionWithAllApprovedPendingTaskAndGroupTask"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle_pictures": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VehiclePicture"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "vehicle_exits": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Vehicle"
                    }
                ]
            },
            "VehicleWithVehicleModel": {
                "allOf": [
                    {
                        "properties": {
                            "vehicle_model": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Vehicle"
                    }
                ]
            },
            "VehicleWithTypeModelOrderAndVehicleModel": {
                "allOf": [
                    {
                        "properties": {
                            "vehicle_model": {
                                "$ref": "#/components/schemas/VehicleModelWithBrand"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "properties": {
                            "type_model_order": {
                                "$ref": "#/components/schemas/TypeModelOrder"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Vehicle"
                    }
                ]
            },
            "VehicleExit": {
                "title": "Vehicle Exit model",
                "description": "Vehicle Exit model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pending_task_id": {
                        "title": "Pending Task ID",
                        "description": "Pending Task ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_note_id": {
                        "title": "Delivery Note ID",
                        "description": "Delivery Note ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "delivery_to": {
                        "title": "Delivery to",
                        "description": "Delivery to",
                        "type": "string"
                    },
                    "name_place": {
                        "title": "Name place",
                        "description": "Name place",
                        "type": "string"
                    },
                    "is_rolling": {
                        "title": "Is Rolling",
                        "description": "Is Rolling",
                        "type": "boolean"
                    },
                    "date_delivery": {
                        "title": "Date delivery",
                        "description": "Date delivery",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VehicleExitPaginate": {
                "allOf": [
                    {
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/VehicleExit"
                                }
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/Paginate"
                    }
                ]
            },
            "VehicleModel": {
                "title": "Vehicle Model model",
                "description": "Vehicle Model model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "brand_id": {
                        "title": "Brand ID",
                        "description": "Brand ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "VehicleModelWithBrand": {
                "allOf": [
                    {
                        "properties": {
                            "brand": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/VehicleModel"
                    }
                ]
            },
            "VehiclePicture": {
                "title": "Vehicle Picture model",
                "description": "Vehicle Picture model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "vehicle_id": {
                        "title": "Vehicle ID",
                        "description": "Vehicle ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reception_id": {
                        "title": "Reception ID",
                        "description": "Reception ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "title": "URL",
                        "description": "URL",
                        "type": "string"
                    },
                    "plate": {
                        "title": "Plate",
                        "description": "Plate",
                        "type": "string"
                    },
                    "latitude": {
                        "title": "Latitude",
                        "description": "Latitude",
                        "type": "string"
                    },
                    "longitude": {
                        "title": "Longitude",
                        "description": "Longitude",
                        "type": "string"
                    },
                    "active": {
                        "title": "Active",
                        "description": "Active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Workshop": {
                "title": "Workshop model",
                "description": "Workshop model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "cif": {
                        "title": "CIF",
                        "description": "CIF",
                        "type": "string"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address",
                        "type": "string"
                    },
                    "location": {
                        "title": "Location",
                        "description": "Location",
                        "type": "string"
                    },
                    "province": {
                        "title": "Province",
                        "description": "Province",
                        "type": "string"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Zone": {
                "title": "Zone model",
                "description": "Zone model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "campa_id": {
                        "title": "Campa ID",
                        "description": "Campa ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "When was created",
                        "type": "string"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "When was last updated",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "500": {
                "description": "An error has occurred."
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}